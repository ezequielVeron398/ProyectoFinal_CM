class Player extends GameObject {
  private char estado; //se usa para cambiar la visualizacion del sprite dependiendo como se mueve
  private Sprite sprite;
  private int radioCollider;


  private ArrayList<Proyectil> balasJugador;

  public Player() {
    this.posicion = new PVector(width/2, height/2);
    this.velocidad = 100;
    this.sprite = new Sprite();
    this.estado = 'q';


    this.radioCollider = 12;



    balasJugador = new ArrayList<Proyectil>();
  }
  public PVector getPosicionPlayer() {
    return this.posicion;
  }

  public void display() {
    this.sprite.displayJugador(estado, this.posicion);
  }
  public void mover() {
  }

  public void moverJugador(boolean arriba, boolean abajo, boolean izquierda, boolean derecha) {
    if (arriba) {
      this.posicion.y -= velocidad*deltaTime;
      this.estado = 'w';
    }
    if (abajo) {
      this.posicion.y += velocidad*deltaTime;
      this.estado = 's';
    }
    if (izquierda) {
      this.posicion.x -= velocidad*deltaTime;
      this.estado = 'a';
    }
    if (derecha) {
      this.posicion.x += velocidad*deltaTime;
      this.estado = 'd';
    }
    if (!arriba && !abajo && !izquierda && !derecha) {
      this.estado = 'q';
    }
  }
  public void visualizarBalas() {
    for (int i = balasJugador.size() - 1; i >= 0; i--) {
      Proyectil bala = balasJugador.get(i);
      bala.mover();
      bala.display();
      // elimna la bala si si llega o pasa el borde de la pantalla
      if (bala.posicion.x < 0 || bala.posicion.x > width
        || bala.posicion.y < 0 || bala.posicion.y > height) {
        balasJugador.remove(i);
      }
    }
  }
  public void generarBalas() {
    balasJugador.add(new BalaJugador(this.posicion.copy(), new PVector(mouseX, mouseY)));
  }
  public void colisionarJugador(ArrayList<Proyectil> balasVomito) {
    for (int i = balasVomito.size() - 1; i >= 0; i--) {
      Proyectil bala = balasVomito.get(i);
      float d = bala.posicion.dist(this.posicion);

      if (d < (this.radioCollider + ((BalaVomito) bala).colliderVomito)) {
        println("Hay colision");
        balasVomito.remove(i);
      }
    }
  }
  public void colisionarEnemigos(ZombieDistancia enemigo, ZombieMele enemigoA) {
    for (int i = balasJugador.size() - 1; i >= 0; i--) {
      Proyectil bala = balasJugador.get(i);
      float d1 = bala.posicion.dist(enemigo.getPosicionEnemigo());
      float d2 = bala.posicion.dist(enemigoA.getPosicionEnemigo());
      if (d1 < 10 + enemigo.getRadioColision()) {
        balasJugador.remove(i);
        enemigo.reaparecer();
      }

      if (d2 < 10 + enemigoA.getRadioColision()) {
        balasJugador.remove(i);
        enemigoA.reaparecer();
      }
    }
  }
}
