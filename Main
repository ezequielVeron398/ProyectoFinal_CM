private Player player;
private Interfaz interfaz;
private PImage fondoMenu, boton_1, boton_2, nombre_inicio, nivel_1, nivel_2;
private ZombieJefe zombieJefe;
private ArrayList<ZombieMele> zomiesMele;
private ArrayList<ZombieDistancia> zombiesDistancia;
private boolean w, s, d, a;
private int tiempoInicio;
private int estadoActual = MaquinaEstados.MENU;
private int anteriorTime = 0;
private int contador = 0;
private boolean disparo = true;
private int cD =0;
private PFont fuente;


public void setup() {
  size(1024, 682);
  fuente = createFont("Bahnschrift", 32);
  fondoMenu = loadImage("menu_fondo.png");
  boton_1 = loadImage("boton1.png");
  boton_2 = loadImage("boton2.png");
  nombre_inicio = loadImage("nombre_inicio.png");
  nivel_1 = loadImage("piso_nivel1.png");
  nivel_2 = loadImage("piso_nivel2.png");
  AudioManager.cargarSonidos(this);
  AudioManager.reproducirMenu();
  interfaz = new Interfaz(100);
}

public void draw() {
  image(fondoMenu, 0, 0, width, height);
  int tiempoActual = millis();
  GameTime.update(tiempoActual, tiempoInicio);
  tiempoInicio = tiempoActual;

  switch (estadoActual) {
  case MaquinaEstados.MENU:
    mostrarMenu();
    break;
  case MaquinaEstados.NIVEL_1:
    ejecutarNivel1();
    break;
  case MaquinaEstados.NIVEL_2:
    ejecutarNivel2();
    break;

  case MaquinaEstados.OPCIONES:
    mostrarOpciones();
    break;
  case MaquinaEstados.WIN:
    mostrarWin();
    break;
  case MaquinaEstados.GAME_OVER:
    mostrarGameOver();
    break;
  }
  if (disparo==false) {

    if (millis()-cD>=1500) {
      disparo = true;
      cD = millis();
    }
  }
}
public void mousePressed() {
  if (estadoActual == MaquinaEstados.MENU) {
    if (mouseX > width/2 - 100 && mouseX < width/2 + 100 &&
      mouseY > height/2 - 30 && mouseY < height/2 + 30) {
      iniciarJuego();
    }

    if (mouseX > width/2 - 100 && mouseX < width/2 + 100 &&
      mouseY > height/2 + 70 && mouseY < height/2 + 130) {
      estadoActual = MaquinaEstados.OPCIONES;
    }
  }

  if (estadoActual == MaquinaEstados.NIVEL_1 || estadoActual == MaquinaEstados.NIVEL_2) {
    if (disparo) {
      player.recargarBalas();
      AudioManager.dispararSonido();
      disparo = false;
    }
  }
  if (estadoActual == MaquinaEstados.GAME_OVER || estadoActual == MaquinaEstados.WIN) {
    AudioManager.detenerMusica();
    AudioManager.reproducirMenu();
    estadoActual = MaquinaEstados.MENU;
  }
}


public void keyPressed() {
  if (key == ESC) {
    if (estadoActual == MaquinaEstados.OPCIONES) {
      estadoActual = MaquinaEstados.MENU;
      key = 0;
    }
  }

  if (estadoActual == MaquinaEstados.NIVEL_1 || estadoActual == MaquinaEstados.NIVEL_2 ) {
    if (key == 's' || key == 'S') s = true;
    if (key == 'w' || key == 'W') w = true;
    if (key == 'a' || key == 'A') a = true;
    if (key == 'd' || key == 'D') d = true;
  }
}

public void keyReleased() {
  if (estadoActual == MaquinaEstados.NIVEL_1 || estadoActual == MaquinaEstados.NIVEL_2) {
    if (key == 's' || key == 'S') s = false;
    if (key == 'w' || key == 'W') w = false;
    if (key == 'a' || key == 'A') a = false;
    if (key == 'd' || key == 'D') d = false;
  }
}

public void mostrarMenu() {
  image(fondoMenu, 0, 0, width, height);
  imageMode(CORNER);
  image(nombre_inicio, 112, 112, 800, 74);
  image(boton_1, 412, 312, 200, 60);
  image(boton_2, 412, 412, 200, 60);
  contador =  0;
}

public void mostrarOpciones() {
  image(fondoMenu, 0, 0, width, height);
  imageMode(CORNER);
  textFont(fuente);
  fill(255);
  textAlign(CENTER, CENTER);
  text("Sonido", width / 2, height / 2);
  textSize(16);
  text("Presiona ESC para volver", width / 2, height - 40);
}

public void iniciarJuego() {
  AudioManager.detenerMenu();
  AudioManager.reproducirMusica();
  estadoActual = MaquinaEstados.NIVEL_1;
  player = new Player();
  zombiesDistancia = new ArrayList<ZombieDistancia>();
  zomiesMele = new ArrayList<ZombieMele>();
  tiempoInicio = millis();
}
public void ejecutarNivel1() {
  imageMode(CENTER);
  image(nivel_1, width / 2, height / 2);

  //imageMode(CORNER);
  if (contador == 0) {

    zombiesDistancia.add(new ZombieDistancia());
    zomiesMele.add(new ZombieMele());
    contador++;
  }

  if (millis() - anteriorTime >= 2000 && contador < 5) {

    zombiesDistancia.add(new ZombieDistancia());
    zomiesMele.add(new ZombieMele());
    anteriorTime = millis();
    contador++;
  }



  player.display();
  interfaz.dibujarBarraVida(this, player.getVidaPlayer(), 20, 20);
  player.usaArma();
  player.mover(w, s, a, d);
  player.recibioDañoDistancia();
  player.colisionarEnemigos(zombiesDistancia, zomiesMele, zombieJefe);

  for (int i = 0; i < zombiesDistancia.size(); i++) {

    zombiesDistancia.get(i).display();
    zombiesDistancia.get(i).mover(player.getPosicionPlayer());
    zombiesDistancia.get(i).disparar();
    player.colisionarJugadorBala(zombiesDistancia.get(i).getBalasVomito());
  }

  for (int i = 0; i < zomiesMele.size(); i++) {

    zomiesMele.get(i).display();
    zomiesMele.get(i).mover(player.getPosicionPlayer());
    player.recibioDañoMele(zomiesMele.get(i));
  }

  if (player.getVidaPlayer() <= 0) {
    AudioManager.detenerMusica();
    AudioManager.gameOverSonido();
    estadoActual = MaquinaEstados.GAME_OVER;
  }

  if (zombiesDistancia.size() == 0 && zomiesMele.size() == 0) {
    iniciarNivel2();
  }
}
public void iniciarNivel2() {
  estadoActual = MaquinaEstados.NIVEL_2;

  zombiesDistancia = new ArrayList<ZombieDistancia>();
  zomiesMele = new ArrayList<ZombieMele>();
  zombieJefe = new ZombieJefe();


  for (int i = 0; i < 0; i++) {
    zombiesDistancia.add(new ZombieDistancia());
  }

  for (int i = 0; i < 0; i++) {
    zomiesMele.add(new ZombieMele());
  }

  println("¡Comienza el Nivel 2!");
}
public void ejecutarNivel2() {
  imageMode(CENTER);
  image(nivel_2, width / 2, height / 2);



  player.display();
  interfaz.dibujarBarraVida(this, player.getVidaPlayer(), 20, 20);
  player.usaArma();
  player.mover(w, s, a, d);
  player.recibioDañoDistancia();
  player.colisionarEnemigos(zombiesDistancia, zomiesMele, zombieJefe);

  if (zombieJefe.getVida() >=0) {
    zombieJefe.display();
    zombieJefe.mover(player.getPosicionPlayer());
    zombieJefe.disparar();
    player.colisionarJugadorBala(zombieJefe.getBalasVomito());
    player.recibioDañoJefe(zombieJefe);
    player.recibioDañoDistanciaJefe();
  }

  for (int i = 0; i < zombiesDistancia.size(); i++) {

    zombiesDistancia.get(i).display();
    zombiesDistancia.get(i).mover(player.getPosicionPlayer());
    zombiesDistancia.get(i).disparar();
    player.colisionarJugadorBala(zombiesDistancia.get(i).getBalasVomito());
  }

  for (int i = 0; i < zomiesMele.size(); i++) {

    zomiesMele.get(i).display();
    zomiesMele.get(i).mover(player.getPosicionPlayer());
    player.recibioDañoMele(zomiesMele.get(i));
  }


  if (player.getVidaPlayer() <= 0 ) {
    AudioManager.detenerMusica();
    estadoActual = MaquinaEstados.GAME_OVER;
    AudioManager.gameOverSonido();
  }

  if (zombieJefe.getVida() <= 0) {
    println("¡Ganaste el juego!");
    estadoActual = MaquinaEstados.WIN;
    AudioManager.detenerMusica();
  }
}

public void mostrarGameOver() {
  background(0);
  fill(255, 0, 0);
  textFont(fuente);
  textAlign(CENTER);
  text("GAME OVER", width/2, height/2-100);
  text("PERDISTE CRACK", width/2, height/2-40);
  fill(255);
  textSize(20);
  text("Haz click para volver al menu", width/2, height/2+220);
  AudioManager.detenerMusica();
}

public void mostrarWin() {
  background(0);
  fill(255, 0, 0);
  textFont(fuente);
  textAlign(CENTER);
  text("YOU WIN!", width/2, height/2-100);
  text("Ganaste Crack", width/2, height/2-40);
  fill(255);
  textSize(20);
  text("Haz click para volver al menu", width/2, height/2+220);
  AudioManager.detenerMusica();
}
